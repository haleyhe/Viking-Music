<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vikings.dao.mapper.PlaylistMapper">
    <cache />

    <resultMap id="playlistMap" type="com.vikings.domain.Playlist">
        <id property="id" column="playlist_id" />
        <result property="name" column="playlist_name"/>
        <result property="creationDate" column="playlist_creation_date"/>
        <result property="description" column="playlist_description"/>
        <result property="publiclyVisible" column="playlist_public"/>
        <result property="numFollowers" column="playlist_num_followers"/>
        <association property="creator" javaType="com.vikings.domain.identifier.UserIdentifier">
            <id property="id" column="playlist_creator_id"/>
            <result property="name" column="playlist_creator_name"/>
        </association>
    </resultMap>

    <resultMap id="tempPlaylistSongMap" type="com.vikings.domain.PlaylistSong">
        <id property="id" column="playlist_song_id"/>
        <result property="playlistTrackNumber" column="playlist_song_track_number"/>
        <result property="dateAdded" column="playlist_song_date_added"/>
    </resultMap>
    
    <insert id="createPlaylist" parameterType="com.vikings.domain.Playlist">
        INSERT IGNORE INTO Playlists (
            playlistId,
            creatorId,
            dateCreated,
            name,
            description,
            isPublic
        ) VALUES (
            #{id},
            #{creator.id},
            #{creationDate},
            #{name},
            #{description},
            #{publiclyVisible}
        );
    </insert>

    <select id="getPlaylist" parameterType="String" resultMap="playlistMap">
        SELECT
            p.playlistId as 'playlist_id',
            p.name as 'playlist_name',
            u.userId as 'playlist_creator_id',
            u.username as 'playlist_creator_name',
            p.dateCreated as 'playlist_creation_date',
            p.description as 'playlist_description',
            p.isPublic as 'playlist_public',
            (SELECT
                COUNT(*)
            FROM
                UserPlaylistsFollowed upf
            WHERE
                upf.playlistId = #{id}
            )
            as 'playlist_num_followers'
        FROM
            Playlists p
        LEFT JOIN
            Users u
        ON
            p.creatorId = u.userId
        WHERE
            p.playlistId = #{id}
    </select>

    <insert id="addSongToPlaylist" parameterType="Map">
        INSERT IGNORE INTO PlaylistSongs (
            playlistId,
            songId,
            trackNumber,
            dateAdded
        ) VALUES (
            #{playlistId},
            #{song.id},
            #{song.playlistTrackNumber},
            #{song.dateAdded}
        )
    </insert>

    <update id="updatePlaylist" parameterType="com.vikings.domain.Playlist">
        UPDATE
            Playlists p
        SET
            <if test="name != null">
                p.name = #{name},
            </if>
            <if test="description != null">
                p.description = #{description},
            </if>
            <if test="publiclyVisible != null">
                p.isPublic = #{publiclyVisible},
            </if>
            p.playlistId = #{id}
        WHERE
            p.playlistId = #{id} 
    </update>

    <delete id="removeSongFromPlaylist" parameterType="Map">
        DELETE FROM
            PlaylistSongs
        WHERE
            playlistId = #{playlistId} AND
            trackNumber = #{trackNum}
    </delete>

    <update id="updatePlaylistTrackNumbersAfterRemove" parameterType="Map">
        UPDATE
            PlaylistSongs
        SET
            trackNumber = trackNumber - 1
        WHERE
            playlistId = #{playlistId} AND
            trackNumber > #{removedTrackNum}
        ORDER BY
            trackNumber ASC
    </update>

    <select id="getPlaylistSong" parameterType="Map" resultMap="tempPlaylistSongMap">
        SELECT
            songId as 'playlist_song_id',
            trackNumber as 'playlist_song_track_number',
            dateAdded as 'playlist_song_date_added'
        FROM
            PlaylistSongs
        WHERE
            playlistId = #{playlistId} AND
            trackNumber =  #{trackNum}
    </select>

    <update id="updatePlaylistTrackNumbersBeforeInsert" parameterType="Map">
        UPDATE
            PlaylistSongs
        SET
            trackNumber = trackNumber + 1
        WHERE
            playlistId = #{playlistId} AND
            trackNumber >= #{newTrackNum}
        ORDER BY
            trackNumber DESC

    </update>

    <select id="getAdminCuratedPlaylists" resultMap="playlistMap">
        SELECT
            p.playlistId as 'playlist_id',
            p.name as 'playlist_name',
            u.userId as 'playlist_creator_id',
            u.username as 'playlist_creator_name',
            p.dateCreated as 'playlist_creation_date',
            p.description as 'playlist_description',
            p.isPublic as 'playlist_public',
            (SELECT
                COUNT(*)
            FROM
                UserPlaylistsFollowed upf
            WHERE
                upf.playlistId = #{id}
            )
            as 'playlist_num_followers'
        FROM
            Users u
        LEFT JOIN
            Playlists p
        ON
            p.creatorId = u.userId
        WHERE
            u.admin = 1
    </select>
    
</mapper>
